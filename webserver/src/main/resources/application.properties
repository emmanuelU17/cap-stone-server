# virtual threads
spring.threads.virtual.enabled=true

# core
#spring.profiles.active=@spring.profiles.active@
spring.profiles.active=default
server.port=${SERVER_PORT:1997}
api.endpoint.baseurl=${API_PREFIX:api/v1/}

# root user
user.principal=${USER_PRINCIPAL}
user.password=${USER_PASSWORD}

# logging behaviour
logging.level.org.hibernate=error
logging.level.org.springframework.jdbc=trace
logging.level.org.springframework.security=trace

# datasource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/sara_brand_db}
spring.datasource.url=jdbc:mysql://${DB_DOMAIN}:${DB_HOST}/${DB_NAME}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# jpa
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=always
spring.jpa.properties.jakarta.persistence.sharedCache.mode=ALL

# flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.table=flyway_schema_history
spring.flyway.baseline-description=init
spring.flyway.baseline-version=0

# handling error message
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param

# cookie config
server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.path=/
server.servlet.session.cookie.max-age=18000
server.servlet.session.cookie.same-site=lax

# file uploaded
spring.servlet.multipart.max-file-size=6MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# jwt
jwt.claim=role

# ui domain
cors.ui.domain=${CORS_UI_DOMAIN}

# aws
aws.bucket=${AWS_BUCKET}
aws.paystack.secret.id=${AWS_PAYSTACK_SECRET_ID}

# cart
cart.cookie.name=CARTCOOKIE
cart.split=%

# payment
paystack.pub.key=${PAYSTACK_PUB_KEY}
paystack.secret.key=${PAYSTACK_SECRET_KEY}

# conversion
sarre.usd.to.cent=${SARRE_USD_TO_CENT:100}
sarre.ngn.to.kobo=${SARRE_NGN_TO_KOB0:0.34}

# refresh shopping cookie and race condition expiration bound
race-condition.expiration.bound=15
shopping.session.expiration.bound=5
